var N = null;var searchIndex = {};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a general purpose sum type with two cases.","items":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[11,"clone","","",0,[[["self"]],["either"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"hash","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"into","","",0,[[["self"]],["result"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"deref","","",0,N],[11,"deref_mut","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which fails early with the opposite side. Can only be used in functions that return `Either` because of the early return of `Right` that it provides.",N,N],[14,"try_right","","Dual to `try_left!`, see its documentation for more information.",N,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]]],"paths":[[4,"Either"]]};
searchIndex["itertools"]={"doc":"Itertools — extra iterator adaptors, functions and macros.","items":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[4,"Diff","","A type returned by the `diff_with` function.",N,N],[13,"FirstMismatch","","The index of the first non-matching element along with both iterator's remaining elements starting with the first mis-match.",1,N],[13,"Shorter","","The total number of elements that were in `J` along with the remaining elements of `I`.",1,N],[13,"Longer","","The total number of elements that were in `I` along with the remaining elements of `J`.",1,N],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for more detail.",N,N],[13,"NoElements","","Empty iterator",2,N],[13,"OneElement","","Iterator with one element, so the minimum and maximum are the same",2,N],[13,"MinMax","","More than one element in the iterator, the first element is not larger than the second",2,N],[4,"Position","","A value yielded by `WithPosition`. Indicates the position of this element in the iterator results.",N,N],[13,"First","","This is the first element.",3,N],[13,"Middle","","This is neither the first nor the last element.",3,N],[13,"Last","","This is the last element.",3,N],[13,"Only","","This is the only element.",3,N],[4,"EitherOrBoth","","A value yielded by `ZipLongest`. Contains one or two values, depending on which of the input iterators are exhausted.",N,N],[13,"Both","","Neither input iterator is exhausted yet, yielding two values.",4,N],[13,"Left","","The parameter iterator of `.zip_longest()` is exhausted, only yielding a value from the `self` iterator.",4,N],[13,"Right","","The `self` iterator of `.zip_longest()` is exhausted, only yielding a value from the parameter iterator.",4,N],[4,"FoldWhile","","An enum used for controlling the execution of `.fold_while()`.",N,N],[13,"Continue","","Continue folding with this value",5,N],[13,"Done","","Fold is complete and will return this value",5,N],[5,"concat","","Combine all an iterator's elements into one element by using `Extend`.",N,N],[5,"cons_tuples","","Create an iterator that maps for example iterators of `((A, B), C)` to `(A, B, C)`.",N,[[["i"]],["constuples"]]],[5,"diff_with","","Compares every element yielded by both `i` and `j` with the given function in lock-step and returns a `Diff` which describes how `j` differs from `i`.",N,[[["i"],["j"],["f"]],["option",["diff"]]]],[5,"kmerge_by","","Create an iterator that merges elements of the contained iterators.",N,[[["i"],["f"]],["kmergeby"]]],[5,"process_results","","“Lift” a function of the values of an iterator so that it can process an iterator of `Result` values instead.",N,[[["i"],["f"]],["result"]]],[5,"repeat_n","","Create an iterator that produces `n` repetitions of `element`.",N,[[["a"],["usize"]],["repeatn"]]],[5,"repeat_call","","An iterator source that produces elements indefinitely by calling a given closure.",N,[[["f"]],["repeatcall"]]],[5,"unfold","","Creates a new unfold source with the specified closure as the \"iterator function\" and an initial state to eventually pass to the closure",N,[[["st"],["f"]],["unfold"]]],[5,"iterate","","Creates a new iterator that infinitely applies function to value and yields results.",N,[[["st"],["f"]],["iterate"]]],[5,"multizip","","An iterator that generalizes .zip() and allows running multiple iterators in lockstep.",N,[[["u"]],["zip"]]],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",N,[[["i"],["j"]],["interleave"]]],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",N,[[["i"],["j"]],["merge"]]],[5,"put_back","","Create an iterator where you can put back a single item",N,[[["i"]],["putback"]]],[5,"put_back_n","","Create an iterator where you can put back multiple values to the front of the iteration.",N,[[["i"]],["putbackn"]]],[5,"multipeek","","An iterator adaptor that allows the user to peek at multiple `.next()` values without advancing the base iterator.",N,[[["i"]],["multipeek"]]],[5,"kmerge","","Create an iterator that merges elements of the contained iterators using the ordering function.",N,[[["i"]],["kmerge"]]],[5,"zip_eq","","Iterate `i` and `j` in lock step.",N,[[["i"],["j"]],["zipeq"]]],[5,"rciter","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",N,[[["i"]],["rciter"]]],[5,"enumerate","","Iterate `iterable` with a running index.",N,[[["i"]],["enumerate"]]],[5,"rev","","Iterate `iterable` in reverse.",N,[[["i"]],["rev"]]],[5,"zip","","Iterate `i` and `j` in lock step.",N,[[["i"],["j"]],["zip"]]],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",N,[[["i"],["j"]],["chain"]]],[5,"cloned","","Create an iterator that clones each element from &T to T",N,[[["i"]],["cloned"]]],[5,"fold","","Perform a fold operation over the iterable.",N,[[["i"],["b"],["f"]],["b"]]],[5,"all","","Test whether the predicate holds for all elements in the iterable.",N,[[["i"],["f"]],["bool"]]],[5,"any","","Test whether the predicate holds for any elements in the iterable.",N,[[["i"],["f"]],["bool"]]],[5,"max","","Return the maximum value of the iterable.",N,[[["i"]],["option"]]],[5,"min","","Return the minimum value of the iterable.",N,[[["i"]],["option"]]],[5,"join","","Combine all iterator elements into one String, seperated by `sep`.",N,[[["i"],["str"]],["string"]]],[5,"sorted","","Collect all the iterable's elements into a sorted vector in ascending order.",N,[[["i"]],["vec"]]],[5,"equal","","Return `true` if both iterators produce equal sequences (elements pairwise equal and sequences of the same length), `false` otherwise.",N,[[["i"],["j"]],["bool"]]],[5,"assert_equal","","Assert that two iterators produce equal sequences, with the same semantics as equal(a, b).",N,[[["i"],["j"]]]],[5,"partition","","Partition a sequence using predicate `pred` so that elements that map to `true` are placed before elements which map to `false`.",N,[[["i"],["f"]],["usize"]]],[0,"structs","","The concrete iterator types.",N,N],[3,"Dedup","itertools::structs","An iterator adaptor that removes repeated duplicates.",N,N],[3,"Interleave","","An iterator adaptor that alternates elements from two iterators until both run out.",N,N],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two iterators until one of them runs out.",N,N],[3,"Product","","An iterator adaptor that iterates over the cartesian product of the element sets of two iterators `I` and `J`.",N,N],[3,"PutBack","","An iterator adaptor that allows putting back a single item to the front of the iterator.",N,N],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in front of the iterator.",N,N],[3,"Batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator and may pick off as many elements as it likes, to produce the next iterator element.",N,N],[3,"Step","","An iterator adaptor that steps a number elements in the base iterator for each iteration.",N,N],[3,"MapResults","","An iterator adapter to apply a transformation within a nested `Result`.",N,N],[3,"Merge","","An iterator adaptor that merges the two base iterators in ascending order. If both base iterators are sorted (ascending), the result is sorted.",N,N],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in ascending order. If both base iterators are sorted (ascending), the result is sorted.",N,N],[3,"MultiPeek","","See `multipeek()` for more information.",N,N],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able iterator to only pick off elements while the predicate returns `true`.",N,N],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator elements and produces `A`. Stops on the first `None` encountered.",N,N],[3,"Coalesce","","An iterator adaptor that may join together adjacent elements.",N,N],[3,"TupleCombinations","","An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples of a specific size.",N,N],[3,"Combinations","","An iterator to iterate through all the `n`-length combinations in an iterator.",N,N],[3,"Unique","","An iterator adapter to filter out duplicate elements.",N,N],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",N,N],[3,"Flatten","","An iterator adapter to simply flatten a structure.",N,N],[3,"Positions","","An iterator adapter to get the positions of each element that matches a predicate.",N,N],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B), C)` to an iterator of `(A, B, C)`.",N,N],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",N,N],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",N,N],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",N,N],[3,"Chunk","","An iterator for the elements in a single chunk.",N,N],[3,"Chunks","","An iterator that yields the Chunk iterators.",N,N],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",N,N],[3,"Group","","An iterator for the elements in a single group.",N,N],[3,"Groups","","An iterator that yields the Group iterators.",N,N],[3,"Intersperse","","An iterator adaptor to insert a particular value between each element of the adapted iterator.",N,N],[3,"KMerge","","An iterator adaptor that merges an abitrary number of base iterators in ascending order. If all base iterators are sorted (ascending), the result is sorted.",N,N],[3,"KMergeBy","","An iterator adaptor that merges an abitrary number of base iterators according to an ordering function.",N,N],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum length by filling missing elements using a closure.",N,N],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure returns `true`.",N,N],[3,"ProcessResults","","An iterator that produces only the `T` values as long as the inner iterator produces `Ok(T)`.",N,N],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.",N,N],[12,"rciter","","The boxed iterator.",6,N],[3,"RepeatN","","An iterator that produces n repetitions of an element.",N,N],[3,"RepeatCall","","See `repeat_call` for more information.",N,N],[3,"Unfold","","See `unfold` for more information.",N,N],[12,"state","","Internal state that will be passed to the closure on the next iteration",7,N],[3,"Iterate","","An iterator that infinitely applies function to value and yields results.",N,N],[3,"Tee","","One half of an iterator pair where both return the same elements.",N,N],[3,"TupleBuffer","","An iterator over a incomplete tuple.",N,N],[3,"TupleWindows","","An iterator over all contiguous windows that produces tuples of a specific size.",N,N],[3,"Tuples","","An iterator that groups the items in tuples of a specific size.",N,N],[3,"WithPosition","","An iterator adaptor that wraps each element in an `Position`.",N,N],[3,"ZipEq","","An iterator which iterates two other iterators simultaneously",N,N],[3,"ZipLongest","","An iterator which iterates two other iterators simultaneously",N,N],[3,"Zip","","See `multizip` for more information.",N,N],[11,"clone","","",8,[[["self"]],["multipeek"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"reset_peek","","Reset the peeking “cursor”",8,[[["self"]]]],[11,"peek","","Works exactly like `.next()` with the only difference that it doesn't advance itself. `.peek()` can be called multiple times, to peek further ahead.",8,[[["self"]],["option"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"clone","","",9,[[["self"]],["interleave"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"clone","","",10,[[["self"]],["interleaveshortest"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"clone","","",11,[[["self"]],["putback"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"with_value","","put back value `value` (builder method)",11,N],[11,"into_parts","","Split the `PutBack` into its parts.",11,N],[11,"put_back","","Put back a single value to the front of the iterator.",11,N],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,N],[11,"all","","",11,[[["self"],["g"]],["bool"]]],[11,"fold","","",11,[[["self"],["acc"],["g"]],["acc"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"clone","","",12,[[["self"]],["putbackn"]]],[11,"put_back","","Puts x in front of the iterator. The values are yielded in order of the most recently put back values first.",12,N],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,N],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"clone","","",13,[[["self"]],["product"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,N],[11,"fold","","",13,[[["self"],["acc"],["g"]],["acc"]]],[11,"clone","","",14,[[["self"]],["batching"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"next","","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,N],[11,"clone","","",15,[[["self"]],["step"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,N],[11,"clone","","",16,[[["self"]],["self"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,N],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"clone","","",18,[[["self"]],["self"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"clone","","",19,[[["self"]],["self"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"fold","","",19,[[["self"],["acc"],["g"]],["acc"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"clone","","",21,[[["self"]],["whilesome"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,N],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"clone","","",24,[[["self"]],["uniqueby"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"next","","",24,[[["self"]],["option"]]],[11,"size_hint","","",24,N],[11,"next","","",25,[[["self"]],["option"]]],[11,"size_hint","","",25,N],[11,"clone","","",25,[[["self"]],["unique"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"clone","","",26,[[["self"]],["flatten"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"next","","",26,[[["self"]],["option"]]],[11,"fold","","",26,[[["self"],["acc"],["g"]],["acc"]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,N],[11,"next","","",28,[[["self"]],["option"]]],[11,"size_hint","","",28,N],[11,"next_back","","",28,[[["self"]],["option"]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,N],[11,"fold","","",29,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","","",29,[[["self"]],["option"]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,N],[11,"fold","","",29,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","","",29,[[["self"]],["option"]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,N],[11,"fold","","",29,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","","",29,[[["self"]],["option"]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,N],[11,"fold","","",29,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","","",29,[[["self"]],["option"]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,N],[11,"fold","","",29,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","","",29,[[["self"]],["option"]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,N],[11,"fold","","",29,[[["self"],["acc"],["fold"]],["acc"]]],[11,"next_back","","",29,[[["self"]],["option"]]],[11,"clone","","",29,[[["self"]],["self"]]],[11,"clone","","",30,[[["self"]],["format"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"drop","","",33,[[["self"]]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"next","","",34,[[["self"]],["option"]]],[11,"drop","","",35,[[["self"]]]],[11,"next","","",35,[[["self"]],["option"]]],[11,"clone","","",36,[[["self"]],["intersperse"]]],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,N],[11,"clone","","",37,[[["self"]],["kmerge"]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"size_hint","","",37,N],[11,"next","","",38,[[["self"]],["option"]]],[11,"size_hint","","",38,N],[11,"clone","itertools","",2,[[["self"]],["minmaxresult"]]],[11,"eq","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"ne","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The returned `Option` has variant `None` if and only if the `MinMaxResult` has variant `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`. If the `MinMaxResult` has variant `OneElement(x)`, performing this operation will make one clone of `x`.",2,[[["self"]],["option"]]],[11,"clone","itertools::structs","",39,[[["self"]],["padusing"]]],[11,"next","","",39,[[["self"]],["option"]]],[11,"size_hint","","",39,N],[11,"next_back","","",39,[[["self"]],["option"]]],[11,"peeking_next","","",11,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",12,[[["self"],["f"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"size_hint","","",40,N],[11,"next","","",41,[[["self"]],["option"]]],[11,"size_hint","","",41,N],[11,"clone","","",6,[[["self"]],["rciter"]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next","","",42,[[["self"]],["option"]]],[11,"size_hint","","",42,N],[11,"next_back","","",42,[[["self"]],["option"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,N],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["unfold"]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,N],[11,"clone","","",44,[[["self"]],["iterate"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"next","","",44,[[["self"]],["option"]]],[11,"size_hint","","",44,N],[11,"next","","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,N],[11,"next","","",46,[[["self"]],["option"]]],[11,"size_hint","","",46,N],[11,"next","","",47,[[["self"]],["option"]]],[11,"into_buffer","","Return a buffer with the produced items that was not enough to be grouped in a tuple.",47,[[["self"]],["tuplebuffer"]]],[11,"next","","",48,[[["self"]],["option"]]],[11,"clone","itertools","",3,[[["self"]],["position"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","","",3,[[["self"],["position"]],["bool"]]],[11,"ne","","",3,[[["self"],["position"]],["bool"]]],[11,"into_inner","","Return the inner value.",3,[[["self"]],["t"]]],[11,"next","itertools::structs","",49,[[["self"]],["option"]]],[11,"size_hint","","",49,N],[11,"clone","","",50,[[["self"]],["zipeq"]]],[11,"next","","",50,[[["self"]],["option"]]],[11,"size_hint","","",50,N],[11,"clone","","",51,[[["self"]],["ziplongest"]]],[11,"next","","",51,[[["self"]],["option"]]],[11,"size_hint","","",51,N],[11,"next_back","","",51,[[["self"]],["option"]]],[11,"clone","itertools","",4,[[["self"]],["eitherorboth"]]],[11,"eq","","",4,[[["self"],["eitherorboth"]],["bool"]]],[11,"ne","","",4,[[["self"],["eitherorboth"]],["bool"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","itertools::structs","",52,[[["self"]],["zip"]]],[11,"new","","Deprecated: renamed to multizip",52,[[["u"]],["zip"]]],[11,"from","","",52,N],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,N],[11,"from","","",52,N],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,N],[11,"from","","",52,N],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,N],[11,"from","","",52,N],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,N],[11,"from","","",52,N],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,N],[11,"from","","",52,N],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,N],[11,"from","","",52,N],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,N],[11,"from","","",52,N],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,N],[8,"PeekingNext","itertools","An iterator that allows peeking at an element before deciding to accept it.",N,N],[10,"peeking_next","","Pass a reference to the next iterator element to the closure `accept`; if `accept` returns true, return it as the next element, else None.",53,[[["self"],["f"]],["option"]]],[8,"Itertools","","The trait `Itertools`: extra iterator adaptors and methods for iterators.",N,N],[11,"interleave","","Alternate elements from two iterators until both have run out.",54,[[["self"],["j"]],["interleave"]]],[11,"interleave_shortest","","Alternate elements from two iterators until at least one of them has run out.",54,[[["self"],["j"]],["interleaveshortest"]]],[11,"intersperse","","An iterator adaptor to insert a particular value between each element of the adapted iterator.",54,N],[11,"zip_longest","","Create an iterator which iterates over both this and the specified iterator simultaneously, yielding pairs of two optional elements.",54,[[["self"],["j"]],["ziplongest"]]],[11,"zip_eq","","Create an iterator which iterates over both this and the specified iterator simultaneously, yielding pairs of elements.",54,[[["self"],["j"]],["zipeq"]]],[11,"batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator and may pick off as many elements as it likes, to produce the next iterator element.",54,[[["self"],["f"]],["batching"]]],[11,"group_by","","Return an iterable that can group iterator elements. Consecutive elements that map to the same key (“runs”), are assigned to the same group.",54,[[["self"],["f"]],["groupby"]]],[11,"chunks","","Return an iterable that can chunk the iterator.",54,[[["self"],["usize"]],["intochunks"]]],[11,"tuple_windows","","Return an iterator over all contiguous windows producing tuples of a specific size (up to 4).",54,[[["self"]],["tuplewindows"]]],[11,"tuples","","Return an iterator that groups the items in tuples of a specific size (up to 4).",54,[[["self"]],["tuples"]]],[11,"tee","","Split into an iterator pair that both yield all elements from the original iterator.",54,N],[11,"step","","Return an iterator adaptor that steps `n` elements in the base iterator for each iteration.",54,[[["self"],["usize"]],["step"]]],[11,"map_results","","Return an iterator adaptor that applies the provided closure to every `Result::Ok` value. `Result::Err` values are unchanged.",54,[[["self"],["f"]],["mapresults"]]],[11,"merge","","Return an iterator adaptor that merges the two base iterators in ascending order.  If both base iterators are sorted (ascending), the result is sorted.",54,[[["self"],["j"]],["merge"]]],[11,"merge_by","","Return an iterator adaptor that merges the two base iterators in order. This is much like `.merge()` but allows for a custom ordering.",54,[[["self"],["j"],["f"]],["mergeby"]]],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of iterators by merging them in ascending order.",54,[[["self"]],["kmerge"]]],[11,"kmerge_by","","Return an iterator adaptor that flattens an iterator of iterators by merging them according to the given closure.",54,[[["self"],["f"]],["kmergeby"]]],[11,"cartesian_product","","Return an iterator adaptor that iterates over the cartesian product of the element sets of two iterators `self` and `J`.",54,[[["self"],["j"]],["product"]]],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure to optionally merge together consecutive elements.",54,[[["self"],["f"]],["coalesce"]]],[11,"dedup","","Remove duplicates from sections of consecutive identical elements. If the iterator is sorted, all elements will be unique.",54,[[["self"]],["dedup"]]],[11,"unique","","Return an iterator adaptor that filters out elements that have already been produced once during the iteration. Duplicates are detected using hash and equality.",54,[[["self"]],["unique"]]],[11,"unique_by","","Return an iterator adaptor that filters out elements that have already been produced once during the iteration.",54,[[["self"],["f"]],["uniqueby"]]],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator and takes items while the closure `accept` returns `true`.",54,[[["self"],["f"]],["peekingtakewhile"]]],[11,"take_while_ref","","Return an iterator adaptor that borrows from a `Clone`-able iterator to only pick off elements while the predicate `accept` returns `true`.",54,[[["self"],["f"]],["takewhileref"]]],[11,"while_some","","Return an iterator adaptor that filters `Option<A>` iterator elements and produces `A`. Stops on the first `None` encountered.",54,[[["self"]],["whilesome"]]],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the combinations of the elements from an iterator.",54,[[["self"]],["tuplecombinations"]]],[11,"combinations","","Return an iterator adaptor that iterates over the `n`-length combinations of the elements from an iterator.",54,[[["self"],["usize"]],["combinations"]]],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a minimum length of `min` by filling missing elements using a closure `f`.",54,[[["self"],["usize"],["f"]],["padusing"]]],[11,"flatten","","Unravel a nested iterator.",54,[[["self"]],["flatten"]]],[11,"with_position","","Return an iterator adaptor that wraps each element in a `Position` to ease special-case handling of the first or last elements.",54,[[["self"]],["withposition"]]],[11,"positions","","Return an iterator adaptor that yields the indices of all elements satisfying a predicate, counted from the start of the iterator.",54,[[["self"],["p"]],["positions"]]],[11,"next_tuple","","Advances the iterator and returns the next items grouped in a tuple of a specific size (up to 4).",54,[[["self"]],["option"]]],[11,"find_position","","Find the position and value of the first element satisfying a predicate.",54,[[["self"],["p"]],["option"]]],[11,"all_equal","","Check whether all elements compare equal.",54,[[["self"]],["bool"]]],[11,"dropping","","Consume the first `n` elements from the iterator eagerly, and return the same iterator again.",54,[[["self"],["usize"]],["self"]]],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly, and return the same iterator again.",54,[[["self"],["usize"]],["self"]]],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",54,[[["self"],["f"]]]],[11,"concat","","Combine all an iterator's elements into one element by using `Extend`.",54,N],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of `.collect()`, for convenience.",54,[[["self"]],["vec"]]],[11,"set_from","","Assign to each reference in `self` from the `from` iterator, stopping at the shortest of the two iterators.",54,[[["self"],["j"]],["usize"]]],[11,"join","","Combine all iterator elements into one String, seperated by `sep`.",54,[[["self"],["str"]],["string"]]],[11,"format","","Format all iterator elements, separated by `sep`.",54,[[["self"],["str"]],["format"]]],[11,"format_with","","Format all iterator elements, separated by `sep`.",54,[[["self"],["str"],["f"]],["formatwith"]]],[11,"fold_results","","Fold `Result` values from an iterator.",54,[[["self"],["b"],["f"]],["result"]]],[11,"fold_options","","Fold `Option` values from an iterator.",54,[[["self"],["b"],["f"]],["option"]]],[11,"fold1","","Accumulator of the elements in the iterator.",54,[[["self"],["f"]],["option"]]],[11,"fold_while","","An iterator method that applies a function, producing a single, final value.",54,[[["self"],["b"],["f"]],["foldwhile"]]],[11,"sorted","","Collect all iterator elements into a sorted vector in ascending order.",54,[[["self"]],["vec"]]],[11,"sorted_by","","Collect all iterator elements into a sorted vector.",54,[[["self"],["f"]],["vec"]]],[11,"partition_map","","Collect all iterator elements into one of two partitions. Unlike `Iterator::partition`, each partition may have a distinct type.",54,N],[11,"minmax","","Return the minimum and maximum elements in the iterator.",54,[[["self"]],["minmaxresult"]]],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as determined by the specified function.",54,[[["self"],["f"]],["minmaxresult"]]],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as determined by the specified comparison function.",54,[[["self"],["f"]],["minmaxresult"]]],[11,"clone","","",5,[[["self"]],["foldwhile"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"into_inner","","Return the value in the continue or done.",5,[[["self"]],["t"]]],[11,"is_done","","Return true if `self` is `Done`, false if it is `Continue`.",5,[[["self"]],["bool"]]],[14,"iproduct","","Create an iterator over the “cartesian product” of iterators.",N,N],[14,"izip","","Create an iterator running multiple iterators in lockstep.",N,N],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"extend","","",0,N],[11,"into","","",0,[[["self"]],["result"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"hash","","",0,N],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",0,N],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"deref_mut","","",0,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","itertools::structs","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into_iter","","",27,[[["self"]],["i"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"into_iter","","",24,[[["self"]],["i"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"into_iter","","",26,[[["self"]],["i"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into_iter","","",28,[[["self"]],["i"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"into_iter","","",29,[[["self"]],["i"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into_iter","","",35,[[["self"]],["i"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into_iter","","",33,[[["self"]],["i"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into_iter","","",32,[[["self"]],["i"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"into_iter","","",36,[[["self"]],["i"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"into_iter","","",37,[[["self"]],["i"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into_iter","","",38,[[["self"]],["i"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"into_iter","","",39,[[["self"]],["i"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into_iter","","",40,[[["self"]],["i"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into_iter","","",41,[[["self"]],["i"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into_iter","","",42,[[["self"]],["i"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into_iter","","",43,[[["self"]],["i"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"into_iter","","",44,[[["self"]],["i"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into_iter","","",45,[[["self"]],["i"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into_iter","","",46,[[["self"]],["i"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into_iter","","",48,[[["self"]],["i"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into_iter","","",47,[[["self"]],["i"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into_iter","","",49,[[["self"]],["i"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"into_iter","","",50,[[["self"]],["i"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"into_iter","","",51,[[["self"]],["i"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"into_iter","","",52,[[["self"]],["i"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]]],"paths":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"MultiPeek"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"PutBack"],[3,"PutBackN"],[3,"Product"],[3,"Batching"],[3,"Step"],[3,"Merge"],[3,"MergeBy"],[3,"Coalesce"],[3,"Dedup"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"TupleCombinations"],[3,"Combinations"],[3,"UniqueBy"],[3,"Unique"],[3,"Flatten"],[3,"MapResults"],[3,"Positions"],[3,"ConsTuples"],[3,"Format"],[3,"FormatWith"],[3,"Groups"],[3,"Group"],[3,"Chunks"],[3,"Chunk"],[3,"Intersperse"],[3,"KMerge"],[3,"KMergeBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"ProcessResults"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"Tuples"],[3,"TupleWindows"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"],[8,"PeekingNext"],[8,"Itertools"],[3,"IntoChunks"],[3,"GroupBy"]]};
searchIndex["pandoc"]={"doc":"API that wraps the pandoc command line tool","items":[[3,"Pandoc","pandoc","the argument builder",N,N],[4,"TrackChanges","","",N,N],[13,"Accept","","",0,N],[13,"Reject","","",0,N],[13,"All","","",0,N],[4,"EmailObfuscation","","",N,N],[13,"None","","",1,N],[13,"Javascript","","",1,N],[13,"References","","",1,N],[4,"Tld","","",N,N],[13,"Chapter","","",2,N],[13,"Section","","",2,N],[13,"Part","","",2,N],[4,"PandocOption","","",N,N],[13,"DataDir","","--data-dir=DIRECTORY",3,N],[13,"Strict","","--strict",3,N],[13,"ParseRaw","","-R --parse-raw",3,N],[13,"Smart","","-S --smart",3,N],[13,"OldDashes","","--old-dashes",3,N],[13,"BaseHeaderLevel","","--base-header-level=NUMBER",3,N],[13,"IndentedCodeClasses","","--indented-code-classes=STRING",3,N],[13,"Filter","","-F PROGRAM --filter=PROGRAM",3,N],[13,"Normalize","","--normalize",3,N],[13,"PreserveTabs","","-p --preserve-tabs",3,N],[13,"TabStop","","--tab-stop=NUMBER",3,N],[13,"TrackChanges","","--track-changes=accept|reject|all",3,N],[13,"ExtractMedia","","--extract-media=PATH",3,N],[13,"Standalone","","-s --standalone",3,N],[13,"Template","","--template=FILENAME",3,N],[13,"Meta","","-M KEY[:VALUE] --metadata=KEY[:VALUE]",3,N],[13,"Var","","-V KEY[:VALUE] --variable=KEY[:VALUE]",3,N],[13,"PrintDefaultTemplate","","-D FORMAT --print-default-template=FORMAT",3,N],[13,"PrintDefaultDataFile","","--print-default-data-file=FILE",3,N],[13,"NoWrap","","--no-wrap",3,N],[13,"Columns","","--columns=NUMBER",3,N],[13,"TableOfContents","","--toc, --table-of-contents",3,N],[13,"TableOfContentsDepth","","--toc-depth=NUMBER",3,N],[13,"NoHighlight","","--no-highlight",3,N],[13,"HighlightStyle","","--highlight-style=STYLE",3,N],[13,"IncludeInHeader","","-H FILENAME --include-in-header=FILENAME",3,N],[13,"IncludeBeforeBody","","-B FILENAME --include-before-body=FILENAME",3,N],[13,"IncludeAfterBody","","-A FILENAME --include-after-body=FILENAME",3,N],[13,"SelfContained","","--self-contained",3,N],[13,"Offline","","--offline",3,N],[13,"Html5","","-5 --html5",3,N],[13,"HtmlQTags","","--html-q-tags",3,N],[13,"Ascii","","--ascii",3,N],[13,"ReferenceLinks","","--reference-links",3,N],[13,"AtxHeaders","","--atx-headers",3,N],[13,"TopLevelDivision","","--top-level-division=",3,N],[13,"NumberSections","","-N --number-sections",3,N],[13,"NumberOffset","","--number-offset=NUMBERS",3,N],[13,"NoTexLigatures","","--no-tex-ligatures",3,N],[13,"Listings","","--listings",3,N],[13,"Incremental","","-i --incremental",3,N],[13,"SlideLevel","","--slide-level=NUMBER",3,N],[13,"SectionDivs","","--section-divs",3,N],[13,"DefaultImageExtension","","--default-image-extension=extension",3,N],[13,"EmailObfuscation","","--email-obfuscation=none|javascript|references",3,N],[13,"IdPrefix","","--id-prefix=STRING",3,N],[13,"TitlePrefix","","-T STRING --title-prefix=STRING",3,N],[13,"Css","","-c URL --css=URL",3,N],[13,"ReferenceOdt","","--reference-odt=FILENAME",3,N],[13,"ReferenceDocx","","--reference-docx=FILENAME",3,N],[13,"EpubStylesheet","","--epub-stylesheet=FILENAME",3,N],[13,"EpubCoverImage","","--epub-cover-image=FILENAME",3,N],[13,"EpubMetadata","","--epub-metadata=FILENAME",3,N],[13,"EpubEmbedFont","","--epub-embed-font=FILE",3,N],[13,"EpubChapterLevel","","--epub-chapter-level=NUMBER",3,N],[13,"PdfEngine","","--pdf-engine=PROGRAM",3,N],[13,"PdfEngineOpt","","--pdf-engine-opt=STRING",3,N],[13,"Bibliography","","--bibliography=FILE",3,N],[13,"Csl","","--csl=FILE",3,N],[13,"CitationAbbreviations","","--citation-abbreviations=FILE",3,N],[13,"Natbib","","--natbib",3,N],[13,"Biblatex","","--biblatex",3,N],[13,"LatexMathML","","-m[URL] --latexmathml[=URL], --asciimathml[=URL]",3,N],[13,"AsciiMathML","","--asciimathml[=URL]",3,N],[13,"MathML","","--mathml[=URL]",3,N],[13,"MimeTex","","--mimetex[=URL]",3,N],[13,"WebTex","","--webtex[=URL]",3,N],[13,"JsMath","","--jsmath[=URL]",3,N],[13,"MathJax","","--mathjax[=URL]",3,N],[13,"Katex","","--katex[=URL]",3,N],[13,"KatexStylesheet","","--katex-stylesheet=URL",3,N],[13,"GladTex","","-gladtex",3,N],[13,"Trace","","--trace",3,N],[13,"DumpArgs","","--dump-args",3,N],[13,"IgnoreArgs","","--ignore-args",3,N],[13,"Verbose","","--verbose",3,N],[4,"DocumentClass","","equivalent to the latex document class",N,N],[13,"Article","","compact form of report",4,N],[13,"Report","","abstract + chapters + custom page for title, abstract and toc",4,N],[13,"Book","","no abstract",4,N],[4,"OutputFormat","","typesafe access to -t FORMAT, -w FORMAT, --to=FORMAT, --write=FORMAT",N,N],[13,"Native","","native Haskell",5,N],[13,"Json","","JSON version of native AST",5,N],[13,"Plain","","Plain text",5,N],[13,"Markdown","","pandoc’s extended markdown",5,N],[13,"MarkdownStrict","","original unextended markdown",5,N],[13,"MarkdownPhpextra","","PHP Markdown extra extended markdown",5,N],[13,"MarkdownGithub","","github extended markdown",5,N],[13,"Commonmark","","CommonMark markdown",5,N],[13,"Rst","","reStructuredText",5,N],[13,"Html","","XHTML 1",5,N],[13,"Html5","","HTML 5",5,N],[13,"Latex","","LaTeX",5,N],[13,"Beamer","","LaTeX beamer slide show",5,N],[13,"Context","","ConTeXt",5,N],[13,"Man","","Groff man",5,N],[13,"MediaWiki","","MediaWiki markup",5,N],[13,"Dokuwiki","","DokuWiki markup",5,N],[13,"Textile","","Textile",5,N],[13,"Org","","Emacs Org-Mode",5,N],[13,"Texinfo","","GNU Texinfo",5,N],[13,"Opml","","OPML",5,N],[13,"Docbook","","DocBook",5,N],[13,"OpenDocument","","Open Document",5,N],[13,"Odt","","OpenOffice text document",5,N],[13,"Docx","","Word docx",5,N],[13,"Haddock","","Haddock markup",5,N],[13,"Rtf","","Rich text format",5,N],[13,"Epub","","EPUB v2 book",5,N],[13,"Epub3","","EPUB v3",5,N],[13,"Fb2","","FictionBook2 e-book",5,N],[13,"Asciidoc","","AsciiDoc",5,N],[13,"Icml","","InDesign ICML",5,N],[13,"Slidy","","Slidy HTML and javascript slide show",5,N],[13,"Slideous","","Slideous HTML and javascript slide show",5,N],[13,"Dzslides","","DZSlides HTML5 + javascript slide show",5,N],[13,"Revealjs","","reveal.js HTML5 + javascript slide show",5,N],[13,"S5","","S5 HTML and javascript slide show",5,N],[13,"Lua","","the path of a custom lua writer (see Custom writers)",5,N],[4,"InputFormat","","typesafe access to -f FORMAT, -r FORMAT, --from=FORMAT, --read=FORMAT",N,N],[13,"Native","","native Haskell",6,N],[13,"Json","","JSON version of native AST",6,N],[13,"Markdown","","pandoc’s extended markdown",6,N],[13,"MarkdownStrict","","original unextended markdown",6,N],[13,"MarkdownPhpextra","","PHP Markdown extra extended markdown",6,N],[13,"MarkdownGithub","","github extended markdown",6,N],[13,"Commonmark","","CommonMark markdown",6,N],[13,"Textile","","Textile",6,N],[13,"Rst","","reStructuredText",6,N],[13,"Html","","HTML",6,N],[13,"DocBook","","DocBook",6,N],[13,"T2t","","txt2tags",6,N],[13,"Docx","","Word docx",6,N],[13,"Epub","","EPUB",6,N],[13,"Opml","","OPML",6,N],[13,"Org","","Emacs Org-Mode",6,N],[13,"MediaWiki","","MediaWiki markup",6,N],[13,"Twiki","","TWiki markup",6,N],[13,"Haddock","","Haddock markup",6,N],[13,"Latex","","LaTeX",6,N],[4,"MarkdownExtension","","",N,N],[13,"EscapedLineBreaks","","",7,N],[13,"BlankBeforeHeader","","",7,N],[13,"HeaderAttributes","","",7,N],[13,"AutoIdentifiers","","",7,N],[13,"ImplicitHeaderReferences","","",7,N],[13,"BlankBeforeBlockQuote","","",7,N],[13,"FencedCodeBlocks","","",7,N],[13,"BacktickCodeBlocks","","",7,N],[13,"FencedCodeAttributes","","",7,N],[13,"LineBlocks","","",7,N],[13,"FancyLists","","",7,N],[13,"Startnum","","",7,N],[13,"DefinitionLists","","",7,N],[13,"ExampleLists","","",7,N],[13,"TableCaptions","","",7,N],[13,"SimpleTables","","",7,N],[13,"MultilineTables","","",7,N],[13,"GridTables","","",7,N],[13,"PipeTables","","",7,N],[13,"PandocTitleBlock","","",7,N],[13,"YamlMetadataBlock","","",7,N],[13,"AllSymbolsEscapable","","",7,N],[13,"IntrawordUnderscores","","",7,N],[13,"Strikeout","","",7,N],[13,"Superscript","","",7,N],[13,"Subscript","","",7,N],[13,"InlineCodeAttributes","","",7,N],[13,"TexMathDollars","","",7,N],[13,"RawHtml","","",7,N],[13,"MarkdownInHtmlBlocks","","",7,N],[13,"NativeDivs","","",7,N],[13,"NativeSpans","","",7,N],[13,"RawTex","","",7,N],[13,"LatexMacros","","",7,N],[13,"ShortcutReferenceLinks","","",7,N],[13,"ImplicitFigures","","",7,N],[13,"Footnotes","","",7,N],[13,"InlineNotes","","",7,N],[13,"Citations","","",7,N],[13,"ListsWithoutPrecedingBlankline","","",7,N],[13,"HardLineBreaks","","",7,N],[13,"IgnoreLineBreaks","","",7,N],[13,"TexMathSingleBackslash","","",7,N],[13,"TexMathDoubleBackslash","","",7,N],[13,"MarkdownAttribute","","",7,N],[13,"MmdTitleBlock","","",7,N],[13,"Abbreviations","","",7,N],[13,"AutolinkBareUris","","",7,N],[13,"AsciiIdentifiers","","",7,N],[13,"LinkAttributes","","",7,N],[13,"MmdHeaderIdentifiers","","",7,N],[13,"CompactDefinitionLists","","",7,N],[4,"InputKind","","",N,N],[13,"Files","","",8,N],[13,"Pipe","","passed to the pandoc executable through stdin",8,N],[4,"OutputKind","","Specify whether to generate a file or pipe the output to stdout.",N,N],[13,"File","","",9,N],[13,"Pipe","","",9,N],[4,"PandocOutput","","The output from Pandoc: the file written to, or a buffer with its output.",N,N],[13,"ToFile","","The results of the pandoc operation are stored in `Path`",10,N],[13,"ToBuffer","","The results of the pandoc operation are returned as a `String`",10,N],[4,"PandocError","","Possible errors that can occur before or during pandoc execution",N,N],[13,"BadUtf8Conversion","","conversion from UTF-8 failed; includes valid-up-to byte count.",11,N],[13,"IoErr","","some kind of IO-Error",11,N],[13,"Err","","pandoc execution failed, provide output from stderr",11,N],[13,"NoOutputSpecified","","forgot to specify an output file",11,N],[13,"NoInputSpecified","","forgot to specify any input files",11,N],[13,"PandocNotFound","","pandoc executable not found",11,N],[5,"new","","Convenience function to call Pandoc::new()",N,[[],["pandoc"]]],[6,"URL","","",N,N],[11,"clone","","",0,[[["self"]],["trackchanges"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["emailobfuscation"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["tld"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["pandocoption"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["documentclass"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["outputformat"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",6,[[["self"]],["inputformat"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["markdownextension"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["inputkind"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",9,[[["self"]],["outputkind"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"default","","",12,[[],["pandoc"]]],[11,"clone","","",12,[[["self"]],["pandoc"]]],[11,"new","","Get a new Pandoc object This function returns a builder object to configure the Pandoc execution.",12,[[],["pandoc"]]],[11,"add_latex_path_hint","","Add a path hint to search for the LaTeX executable.",12,[[["self"],["t"]],["pandoc"]]],[11,"add_pandoc_path_hint","","Add a path hint to search for the Pandoc executable.",12,[[["self"],["t"]],["pandoc"]]],[11,"set_doc_class","","Set or overwrite the document-class.",12,[[["self"],["documentclass"]],["pandoc"]]],[11,"set_show_cmdline","","Set whether Pandoc should print the used command-line",12,[[["self"],["bool"]],["pandoc"]]],[11,"set_output_format","","Set or overwrite the output format.",12,[[["self"],["outputformat"],["vec",["markdownextension"]]],["pandoc"]]],[11,"set_input_format","","Set or overwrite the input format",12,[[["self"],["inputformat"],["vec",["markdownextension"]]],["pandoc"]]],[11,"add_input","","Add additional input files",12,[[["self"],["t"]],["pandoc"]]],[11,"set_input","","Set input for Pandoc.",12,[[["self"],["inputkind"]],["pandoc"]]],[11,"set_output","","Set or overwrite the output filename.",12,[[["self"],["outputkind"]],["pandoc"]]],[11,"set_bibliography","","Set the file name of the bibliography database.",12,[[["self"],["t"]],["pandoc"]]],[11,"set_csl","","Set the filename of the citation style file.",12,[[["self"],["t"]],["pandoc"]]],[11,"set_toc","","Enable the generation of a table of contents",12,[[["self"]],["pandoc"]]],[11,"set_chapters","","Treat top-level headers as chapters in LaTeX, ConTeXt, and DocBook output.",12,[[["self"]],["pandoc"]]],[11,"set_number_sections","","Set custom prefix for sections.",12,[[["self"]],["pandoc"]]],[11,"set_latex_template","","Set a custom latex template.",12,[[["self"],["t"]],["pandoc"]]],[11,"set_slide_level","","Set the header level that causes a new slide to be generated.",12,[[["self"],["u32"]],["pandoc"]]],[11,"set_variable","","Set a custom variable.",12,[[["self"],["t"],["u"]],["pandoc"]]],[11,"add_filter","","Add a Pandoc filter.",12,N],[11,"add_option","","Add a PandocOption.",12,[[["self"],["pandocoption"]],["pandoc"]]],[11,"add_options","","",12,N],[11,"generate_latex_template","","generate a latex template from the given settings",12,[[["self"],["t"]]]],[11,"execute","","Execute the Pandoc configured command.",12,[[["self"]],["result",["pandocoutput","pandocerror"]]]],[11,"from","","",11,[[["error"]],["self"]]],[11,"from","","",11,[[["utf8error"]],["self"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",11,[[["self"]],["str"]]],[11,"cause","","",11,[[["self"]],["option",["error"]]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]]],"paths":[[4,"TrackChanges"],[4,"EmailObfuscation"],[4,"Tld"],[4,"PandocOption"],[4,"DocumentClass"],[4,"OutputFormat"],[4,"InputFormat"],[4,"MarkdownExtension"],[4,"InputKind"],[4,"OutputKind"],[4,"PandocOutput"],[4,"PandocError"],[3,"Pandoc"]]};
initSearch(searchIndex);
